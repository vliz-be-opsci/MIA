"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActorExtractLinks = void 0;
const core_1 = require("@comunica/core");
/**
 * A comunica actor for extract-links events.
 *
 * Actor types:
 * * Input:  IActionExtractLinks:      Metdata from which links can be extracted.
 * * Test:   <none>
 * * Output: IActorExtractLinksOutput: The extracted links.
 *
 * @see IActionExtractLinks
 * @see IActorExtractLinksOutput
 */
class ActorExtractLinks extends core_1.Actor {
    /**
     * @param args - @defaultNested {<default_bus> a <cc:components/Bus.jsonld#Bus>} bus
     */
    constructor(args) {
        super(args);
    }
    /**
     * A helper function to append links based on incoming quads.
     * @param metadata A metadata stream of quads.
     * @param onQuad A callback that will be invoked for each quad in the metadata stream.
     *               The second argument is the array of links that can be appended to.
     */
    static collectStream(metadata, onQuad) {
        return new Promise((resolve, reject) => {
            const links = [];
            // Forward errors
            metadata.on('error', reject);
            // Invoke callback on each metadata quad
            metadata.on('data', (quad) => onQuad(quad, links));
            // Resolve to discovered links
            metadata.on('end', () => {
                resolve(links);
            });
        });
    }
}
exports.ActorExtractLinks = ActorExtractLinks;
//# sourceMappingURL=ActorExtractLinks.js.map