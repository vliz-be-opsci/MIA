import type { IActionExtractLinks, IActorExtractLinksOutput } from '@comunica/bus-extract-links';
import { ActorExtractLinks } from '@comunica/bus-extract-links';
import type { IActorArgs, IActorTest } from '@comunica/core';
import type { IActionContext } from '@comunica/types';
import type { Algebra } from 'sparqlalgebrajs';
/**
 * A comunica Traverse Quad Pattern RDF Metadata Extract Actor.
 */
export declare class ActorExtractLinksQuadPattern extends ActorExtractLinks {
    private readonly onlyVariables;
    constructor(args: IActorExtractLinksQuadPatternArgs);
    static getCurrentQuadPattern(context: IActionContext): Algebra.Pattern | undefined;
    test(action: IActionExtractLinks): Promise<IActorTest>;
    run(action: IActionExtractLinks): Promise<IActorExtractLinksOutput>;
}
export interface IActorExtractLinksQuadPatternArgs extends IActorArgs<IActionExtractLinks, IActorTest, IActorExtractLinksOutput> {
    /**
     * @default {true}
     */
    onlyVariables: boolean;
}
