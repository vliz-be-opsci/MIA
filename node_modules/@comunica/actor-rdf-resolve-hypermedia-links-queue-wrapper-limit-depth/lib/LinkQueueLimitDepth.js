"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KEY_METADATA_DEPTH = exports.LinkQueueLimitDepth = void 0;
const bus_rdf_resolve_hypermedia_links_queue_1 = require("@comunica/bus-rdf-resolve-hypermedia-links-queue");
/**
 * A link queue that only allows the given number of links to be pushed into it.
 */
class LinkQueueLimitDepth extends bus_rdf_resolve_hypermedia_links_queue_1.LinkQueueWrapper {
    constructor(linkQueue, limit) {
        super(linkQueue);
        this.limit = limit;
    }
    push(link, parent) {
        // Ensure our parent has a defined depth
        if (!parent.metadata) {
            parent.metadata = {};
        }
        if (!parent.metadata[exports.KEY_METADATA_DEPTH]) {
            parent.metadata[exports.KEY_METADATA_DEPTH] = 0;
        }
        // Determine link depth
        const depth = parent.metadata[exports.KEY_METADATA_DEPTH] + 1;
        // Don't allow pushing if we exceeded our depth limit
        if (depth > this.limit) {
            return false;
        }
        // Set the depth of our current link
        if (!link.metadata) {
            link.metadata = {};
        }
        link.metadata[exports.KEY_METADATA_DEPTH] = depth;
        return super.push(link, parent);
    }
}
exports.LinkQueueLimitDepth = LinkQueueLimitDepth;
exports.KEY_METADATA_DEPTH = 'actor-rdf-resolve-hypermedia-links-queue-wrapper-limit-depth:depth';
//# sourceMappingURL=LinkQueueLimitDepth.js.map