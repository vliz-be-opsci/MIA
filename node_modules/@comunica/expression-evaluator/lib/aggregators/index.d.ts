import type * as RDF from '@rdfjs/types';
import type { Algebra } from 'sparqlalgebrajs';
import type { ICompleteSharedContext } from '../evaluators/evaluatorHelpers/BaseExpressionEvaluator';
import type { SetFunction } from '../util/Consts';
import type { AggregatorComponent } from './Aggregator';
export interface IAggregatorComponentClass {
    new (expr: Algebra.AggregateExpression, sharedContext: ICompleteSharedContext): AggregatorComponent;
    emptyValue: () => RDF.Term | undefined;
}
export declare const aggregators: Readonly<{
    [key in SetFunction]: IAggregatorComponentClass;
}>;
