{"version":3,"file":"Sum.js","sourceRoot":"","sources":["Sum.ts"],"names":[],"mappings":";;;AAEA,4CAAgD;AAChD,kDAA+C;AAC/C,oCAAoC;AACpC,6CAAmD;AAInD,MAAa,GAAI,SAAQ,gCAAmB;IAA5C;;QACU,UAAK,GAAyB,SAAS,CAAC;QAC/B,WAAM,GAAG,4BAAgB,CAAC,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;IAqBzE,CAAC;IAnBQ,MAAM,CAAU,UAAU;QAC/B,OAAO,IAAA,iBAAO,EAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;IAEM,GAAG,CAAC,IAAc;QACvB,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;YAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAC/C,CAAC;aAAM,CAAC;YACN,MAAM,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,KAAK,GAAsB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAE,IAAI,CAAC,KAAK,EAAE,YAAY,CAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACtG,CAAC;IACH,CAAC;IAEM,MAAM;QACX,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;YAC7B,OAAO,GAAG,CAAC,UAAU,EAAE,CAAC;QAC1B,CAAC;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IAC5B,CAAC;CACF;AAvBD,kBAuBC","sourcesContent":["import type * as RDF from '@rdfjs/types';\nimport type * as E from '../expressions';\nimport { regularFunctions } from '../functions';\nimport { integer } from '../functions/Helpers';\nimport * as C from '../util/Consts';\nimport { AggregatorComponent } from './Aggregator';\n\ntype SumState = E.NumericLiteral;\n\nexport class Sum extends AggregatorComponent {\n  private state: SumState | undefined = undefined;\n  private readonly summer = regularFunctions[C.RegularOperator.ADDITION];\n\n  public static override emptyValue(): RDF.Term {\n    return integer(0).toRDF();\n  }\n\n  public put(term: RDF.Term): void {\n    if (this.state === undefined) {\n      this.state = this.termToNumericOrError(term);\n    } else {\n      const internalTerm = this.termToNumericOrError(term);\n      this.state = <E.NumericLiteral> this.summer.apply([ this.state, internalTerm ], this.sharedContext);\n    }\n  }\n\n  public result(): RDF.Term {\n    if (this.state === undefined) {\n      return Sum.emptyValue();\n    }\n    return this.state.toRDF();\n  }\n}\n"]}