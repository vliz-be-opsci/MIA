import type * as RDF from '@rdfjs/types';
import type { Algebra } from 'sparqlalgebrajs';
/**
 * Implementation of the COUNT aggregator on a wildcard.
 * We choose to make this is separate class, because it would pollute the code of the other aggregators.
 */
export declare class WildcardCountAggregator {
    private readonly distinct;
    private readonly bindingValues;
    private counter;
    constructor(expr: Algebra.AggregateExpression);
    putBindings(bindings: RDF.Bindings): void;
    static emptyValue(): RDF.Term;
    result(): RDF.Term;
    /**
     * Returns true if the given bindings should be skipped.
     * @param bindings
     * @private
     */
    private handleDistinct;
}
