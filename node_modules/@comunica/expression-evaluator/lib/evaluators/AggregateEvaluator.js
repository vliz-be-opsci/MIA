"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AggregateEvaluator = void 0;
const BaseAggregateEvaluator_1 = require("./evaluatorHelpers/BaseAggregateEvaluator");
const SyncEvaluator_1 = require("./SyncEvaluator");
// TODO: Support hooks & change name to SyncAggregateEvaluator
class AggregateEvaluator extends BaseAggregateEvaluator_1.BaseAggregateEvaluator {
    constructor(expr, context, throwError) {
        super(expr, SyncEvaluator_1.SyncEvaluator.completeContext(context ?? {}), throwError);
        this.evaluator = new SyncEvaluator_1.SyncEvaluator(expr.expression, context);
    }
    put(bindings) {
        if (this.errorOccurred) {
            return;
        }
        if (this.isWildcard) {
            this.wildcardAggregator.putBindings(bindings);
        }
        else {
            try {
                const startTerm = this.evaluator.evaluate(bindings);
                this.aggregator.put(startTerm);
            }
            catch (error) {
                this.safeThrow(error);
            }
        }
    }
    safeThrow(err) {
        if (this.throwError) {
            throw err;
        }
        else {
            this.errorOccurred = true;
        }
    }
}
exports.AggregateEvaluator = AggregateEvaluator;
//# sourceMappingURL=AggregateEvaluator.js.map