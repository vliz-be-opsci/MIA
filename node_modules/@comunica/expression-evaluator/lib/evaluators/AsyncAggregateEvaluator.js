"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AsyncAggregateEvaluator = void 0;
const AsyncEvaluator_1 = require("./AsyncEvaluator");
const BaseAggregateEvaluator_1 = require("./evaluatorHelpers/BaseAggregateEvaluator");
class AsyncAggregateEvaluator extends BaseAggregateEvaluator_1.BaseAggregateEvaluator {
    constructor(expr, context, throwError) {
        super(expr, AsyncEvaluator_1.AsyncEvaluator.completeContext(context ?? {}), throwError);
        this.evaluator = new AsyncEvaluator_1.AsyncEvaluator(expr.expression, context);
        this.errorOccurred = false;
    }
    async put(bindings) {
        if (this.errorOccurred) {
            return;
        }
        if (this.isWildcard) {
            this.wildcardAggregator.putBindings(bindings);
        }
        else {
            try {
                const startTerm = await this.evaluator.evaluate(bindings);
                if (!startTerm || this.errorOccurred) {
                    return;
                }
                this.aggregator.put(startTerm);
            }
            catch (error) {
                this.safeThrow(error);
            }
        }
    }
    safeThrow(err) {
        if (this.throwError) {
            throw err;
        }
        else {
            this.errorOccurred = true;
        }
    }
}
exports.AsyncAggregateEvaluator = AsyncAggregateEvaluator;
//# sourceMappingURL=AsyncAggregateEvaluator.js.map