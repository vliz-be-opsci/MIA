import type { IActionExtractLinks, IActorExtractLinksOutput } from '@comunica/bus-extract-links';
import { ActorExtractLinks } from '@comunica/bus-extract-links';
import type { IActorArgs, IActorTest } from '@comunica/core';
/**
 * A comunica Traverse Predicates RDF Metadata Extract Actor.
 */
export declare class ActorExtractLinksPredicates extends ActorExtractLinks {
    private readonly checkSubject;
    private readonly predicates;
    private readonly stringPredicates;
    constructor(args: IActorExtractLinksTraversePredicatesArgs);
    test(_action: IActionExtractLinks): Promise<IActorTest>;
    run(action: IActionExtractLinks): Promise<IActorExtractLinksOutput>;
    private subjectMatches;
}
export interface IActorExtractLinksTraversePredicatesArgs extends IActorArgs<IActionExtractLinks, IActorTest, IActorExtractLinksOutput> {
    /**
     * If only quads will be considered that have a subject equal to the request URL.
     */
    checkSubject: boolean;
    /**
     * A list of regular expressions that will be tested against predicates of quads.
     */
    predicateRegexes: string[];
}
