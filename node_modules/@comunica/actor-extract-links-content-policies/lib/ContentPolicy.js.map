{"version":3,"file":"ContentPolicy.js","sourceRoot":"","sources":["ContentPolicy.ts"],"names":[],"mappings":";;;AAEA;;;;;;;GAOG;AACH,MAAa,aAAa;IAKxB,YAAmB,YAA+B,EAAE,SAAsB,EAAE,MAA0B;QACpG,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;CACF;AAVD,sCAUC","sourcesContent":["import type { Algebra } from 'sparqlalgebrajs';\n\n/**\n * A content policies represents a function from graph pattern to matching variables.\n * The matching variables can then be used to indicate which URLs should be followed.\n *\n * Additionally, an optional filter can be defined to indicate what triples\n * inside the documents of the followed URLs should be considered.\n * This filter is represented as a construct query.\n */\nexport class ContentPolicy {\n  public readonly graphPattern: Algebra.Operation;\n  public readonly variables: IVariable[];\n  public readonly filter?: Algebra.Construct;\n\n  public constructor(graphPattern: Algebra.Operation, variables: IVariable[], filter?: Algebra.Construct) {\n    this.graphPattern = graphPattern;\n    this.variables = variables;\n    this.filter = filter;\n  }\n}\n\nexport interface IVariable {\n  /**\n   * A variable name, without '?'.\n   */\n  name: string;\n  /**\n   * A boolean indicating if the content policies that are defined\n   * in the range of followed documents should be considered.\n   */\n  withPolicies: boolean;\n}\n"]}