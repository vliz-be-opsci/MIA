{"version":3,"file":"LinkQueueLimitCount.js","sourceRoot":"","sources":["LinkQueueLimitCount.ts"],"names":[],"mappings":";;;AACA,6GAAoF;AAEpF;;GAEG;AACH,MAAa,mBAAoB,SAAQ,yDAAgB;IAGvD,YAAmB,SAAqB,EAAE,KAAa;QACrD,KAAK,CAAC,SAAS,CAAC,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEe,IAAI,CAAC,IAAW,EAAE,MAAa;QAC7C,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE,CAAC;YACrB,OAAO,KAAK,CAAC;QACf,CAAC;QACD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAClC,CAAC;CACF;AAfD,kDAeC","sourcesContent":["import type { ILinkQueue, ILink } from '@comunica/bus-rdf-resolve-hypermedia-links-queue';\nimport { LinkQueueWrapper } from '@comunica/bus-rdf-resolve-hypermedia-links-queue';\n\n/**\n * A link queue that only allows the given number of links to be pushed into it.\n */\nexport class LinkQueueLimitCount extends LinkQueueWrapper {\n  private limit: number;\n\n  public constructor(linkQueue: ILinkQueue, limit: number) {\n    super(linkQueue);\n    this.limit = limit;\n  }\n\n  public override push(link: ILink, parent: ILink): boolean {\n    if (this.limit === 0) {\n      return false;\n    }\n    this.limit--;\n    return super.push(link, parent);\n  }\n}\n"]}