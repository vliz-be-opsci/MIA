{"version":3,"file":"ActorRdfMetadataExtractTraverse.js","sourceRoot":"","sources":["ActorRdfMetadataExtractTraverse.ts"],"names":[],"mappings":";;;AAEA,iFAA6E;AAG7E;;GAEG;AACH,MAAa,+BAAgC,SAAQ,kDAAuB;IAG1E,YAAmB,IAA0C;QAC3D,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,IAAI,CAAC,OAAkC;QAClD,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,MAAiC;QAChD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC/D,OAAO;YACL,QAAQ,EAAE;gBACR,QAAQ,EAAE,MAAM,CAAC,KAAK;gBACtB,mBAAmB,EAAE,MAAM,CAAC,gBAAgB;aAC7C;SACF,CAAC;IACJ,CAAC;CACF;AApBD,0EAoBC","sourcesContent":["import type { MediatorExtractLinks } from '@comunica/bus-extract-links';\nimport type { IActionRdfMetadataExtract, IActorRdfMetadataExtractOutput } from '@comunica/bus-rdf-metadata-extract';\nimport { ActorRdfMetadataExtract } from '@comunica/bus-rdf-metadata-extract';\nimport type { IActorArgs, IActorTest } from '@comunica/core';\n\n/**\n * A comunica Traverse RDF Metadata Extract Actor.\n */\nexport class ActorRdfMetadataExtractTraverse extends ActorRdfMetadataExtract {\n  private readonly mediatorExtractLinks: MediatorExtractLinks;\n\n  public constructor(args: IActorRdfMetadataExtractTraverseArgs) {\n    super(args);\n  }\n\n  public async test(_action: IActionRdfMetadataExtract): Promise<IActorTest> {\n    return true;\n  }\n\n  public async run(action: IActionRdfMetadataExtract): Promise<IActorRdfMetadataExtractOutput> {\n    const result = await this.mediatorExtractLinks.mediate(action);\n    return {\n      metadata: {\n        traverse: result.links,\n        traverseConditional: result.linksConditional,\n      },\n    };\n  }\n}\n\nexport interface IActorRdfMetadataExtractTraverseArgs\n  extends IActorArgs<IActionRdfMetadataExtract, IActorTest, IActorRdfMetadataExtractOutput> {\n  /**\n   * Mediator for extracting links for traversal.\n   */\n  mediatorExtractLinks: MediatorExtractLinks;\n}\n"]}