"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OverrideListInsertAfter = void 0;
const Iris_1 = require("../../rdf/Iris");
const OverrideUtil_1 = require("./OverrideUtil");
/**
 * Override step that inserts elements in a list after a specific element.
 *
 * Uses the following override step fields:
 *  - `overrideParameter`: Parameter of the original object that contains the list.
 *  - `overrideTarget`: Element already in the list that is used as reference. This can be a named node or a literal.
 *  - `overrideValue`: Element(s) to insert immediately after the target element.
 */
class OverrideListInsertAfter {
    canHandle(config, step) {
        return step.property.type.value === (0, Iris_1.PREFIX_OO)('OverrideListInsertAfter');
    }
    handle(config, step) {
        const { parameters, targets, values } = (0, OverrideUtil_1.extractOverrideStepFields)(step, { parameters: 1, targets: 1 });
        const list = (0, OverrideUtil_1.getPropertyResourceList)(config, parameters[0]);
        const index = (0, OverrideUtil_1.findResourceIndex)(list, targets[0]);
        // +1 so we start after the selected element
        list.splice(index + 1, 0, ...values);
        return config;
    }
}
exports.OverrideListInsertAfter = OverrideListInsertAfter;
//# sourceMappingURL=OverrideListInsertAfter.js.map