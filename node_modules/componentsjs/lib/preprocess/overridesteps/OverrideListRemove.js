"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OverrideListRemove = void 0;
const Iris_1 = require("../../rdf/Iris");
const OverrideUtil_1 = require("./OverrideUtil");
/**
 * Override step that removes specified elements.
 *
 * Uses the following override step fields:
 *  - `overrideParameter`: Parameter of the original object that contains the list.
 *  - `overrideTarget`: Element(s) already in the list that need to be removed. These can be named nodes or literals.
 */
class OverrideListRemove {
    canHandle(config, step) {
        return step.property.type.value === (0, Iris_1.PREFIX_OO)('OverrideListRemove');
    }
    handle(config, step) {
        const { parameters, targets, values } = (0, OverrideUtil_1.extractOverrideStepFields)(step, { parameters: 1, values: 0 });
        const list = (0, OverrideUtil_1.getPropertyResourceList)(config, parameters[0]);
        const indexes = [];
        for (const element of targets) {
            indexes.push((0, OverrideUtil_1.findResourceIndex)(list, element));
        }
        // Highest number first so indexes remain correct while sorting
        indexes.sort((left, right) => right - left);
        for (const index of indexes) {
            list.splice(index, 1);
        }
        return config;
    }
}
exports.OverrideListRemove = OverrideListRemove;
//# sourceMappingURL=OverrideListRemove.js.map