import type { Resource } from 'rdf-object';
import type { IOverrideStep } from './IOverrideStep';
/**
 * Override step that updates an entry in a key/value map.
 *
 * Uses the following override step fields:
 *  - `overrideParameter`: Parameter of the original object that contains the key/value map.
 *  - `overrideTarget`: The key that needs to be updated.
 *  - `overrideValue`: The new value for the key. In case this is not defined, the key will be deleted instead.
 */
export declare class OverrideMapEntry implements IOverrideStep {
    canHandle(config: Resource, step: Resource): boolean;
    handle(config: Resource, step: Resource): Resource;
    /**
     * Finds the URIs used to link to the key and value of a map entry.
     *
     * @param type - Type of the class that contains the key/value map.
     * @param parameter - Parameter of the class used to link to the key/value map.
     */
    protected findProperties(type: Resource, parameter: Resource): {
        key: Resource;
        value: Resource;
    };
    /**
     * Finds the index in a list of key/value map entries of the entry with the matching key.
     *
     * @param entries - List of key/value map entries.
     * @param key - Key of the entry to find.
     * @param properties - URIs used to link the key and value of a map entry.
     */
    protected findEntryIndex(entries: Resource[], key: Resource, properties: {
        key: Resource;
        value: Resource;
    }): number;
}
