{"version":3,"file":"RdfStoreIndexNestedRecord.js","sourceRoot":"","sources":["RdfStoreIndexNestedRecord.ts"],"names":[],"mappings":"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","sourcesContent":["import type * as RDF from '@rdfjs/types';\nimport type { ITermDictionary } from '../dictionary/ITermDictionary';\nimport type { IRdfStoreOptions } from '../IRdfStoreOptions';\nimport { encodeOptionalTerms } from '../OrderUtils';\nimport type { QuadPatternTerms, QuadTerms, EncodedQuadTerms } from '../PatternTerm';\nimport type { IRdfStoreIndex } from './IRdfStoreIndex';\n\n/**\n * An RDF store index that is implemented using nested records.\n */\nexport class RdfStoreIndexNestedRecord<E extends number, V> implements IRdfStoreIndex<E, V> {\n  protected readonly dictionary: ITermDictionary<E>;\n  protected readonly nestedRecords: NestedRecordActual<E>;\n  public readonly features = {\n    quotedTripleFiltering: false,\n  };\n\n  public constructor(options: IRdfStoreOptions<E>) {\n    this.dictionary = options.dictionary;\n    this.nestedRecords = <any>{};\n  }\n\n  public set(terms: EncodedQuadTerms<E>, value: V): boolean {\n    const map0 = this.nestedRecords;\n    const map1 = map0[terms[0]] || (map0[terms[0]] = <any>{});\n    const map2 = map1[terms[1]] || (map1[terms[1]] = <any>{});\n    const map3 = map2[terms[2]] || (map2[terms[2]] = <any>{});\n    if (map3[terms[3]]) {\n      return false;\n    }\n    map3[terms[3]] = value;\n    return true;\n  }\n\n  public remove(terms: EncodedQuadTerms<E>): boolean {\n    const map0 = this.nestedRecords;\n    const map1 = map0[terms[0]];\n    if (!map1) {\n      return false;\n    }\n    const map2 = map1[terms[1]];\n    if (!map2) {\n      return false;\n    }\n    const map3 = map2[terms[2]];\n    if (!map3) {\n      return false;\n    }\n    if (!map3[terms[3]]) {\n      return false;\n    }\n    delete map3[terms[3]];\n\n    // Clean up intermediate maps\n    if (Object.keys(map3).length === 0) {\n      delete map2[terms[2]];\n      if (Object.keys(map2).length === 0) {\n        delete map1[terms[1]];\n        if (Object.keys(map1).length === 0) {\n          delete map0[terms[0]];\n        }\n      }\n    }\n\n    return true;\n  }\n\n  public get(key: QuadTerms): V | undefined {\n    const encoded = encodeOptionalTerms(<QuadPatternTerms> key, this.dictionary);\n    // eslint-disable-next-line unicorn/no-useless-undefined\n    if (!encoded || encoded.includes(undefined)) {\n      return undefined;\n    }\n    return this.getEncoded(<EncodedQuadTerms<E>> encoded);\n  }\n\n  public getEncoded(ids: EncodedQuadTerms<E>): V | undefined {\n    return this.nestedRecords[ids[0]]?.[ids[1]]?.[ids[2]]?.[ids[3]];\n  }\n\n  public * find(terms: QuadPatternTerms): IterableIterator<QuadTerms> {\n    const ids = encodeOptionalTerms(terms, this.dictionary);\n    if (!ids) {\n      return;\n    }\n\n    const [ id0, id1, id2, id3 ] = ids;\n    const [ term0, term1, term2, term3 ] = terms;\n\n    let partialQuad0: RDF.Term;\n    let partialQuad1: RDF.Term;\n    let partialQuad2: RDF.Term;\n    let partialQuad3: RDF.Term;\n\n    let map1: NestedRecordActual<E>;\n    let map2: NestedRecordActual<E>;\n    let map3: NestedRecordActual<E>;\n\n    const map0: NestedRecordActual<E> = this.nestedRecords;\n    const map0Keys = id0 !== undefined ? (id0 in map0 ? [ id0 ] : []) : Object.keys(map0);\n    for (const key1 of map0Keys) {\n      map1 = map0[<E>key1];\n      partialQuad0 = term0 || this.dictionary.decode(<E>Number.parseInt(<string>key1, 10));\n      const map1Keys = id1 !== undefined ? (id1 in map1 ? [ id1 ] : []) : Object.keys(map1);\n      for (const key2 of map1Keys) {\n        map2 = map1[<E>key2];\n        partialQuad1 = term1 || this.dictionary.decode(<E>Number.parseInt(<string>key2, 10));\n        const map2Keys = id2 !== undefined ? (id2 in map2 ? [ id2 ] : []) : Object.keys(map2);\n        for (const key3 of map2Keys) {\n          map3 = map2[<E>key3];\n          partialQuad2 = term2 || this.dictionary.decode(<E>Number.parseInt(<string>key3, 10));\n          const map3Keys = id3 !== undefined ? (id3 in map3 ? [ id3 ] : []) : Object.keys(map3);\n          for (const key4 of map3Keys) {\n            partialQuad3 = term3 || this.dictionary.decode(<E>Number.parseInt(<string>key4, 10));\n            yield <any>[ partialQuad0, partialQuad1, partialQuad2, partialQuad3 ];\n          }\n        }\n      }\n    }\n  }\n\n  // The code below is nearly identical. We duplicate because abstraction would result in a significant performance hit.\n\n  public * findEncoded(\n    ids: EncodedQuadTerms<E | undefined>,\n    terms: QuadPatternTerms,\n  ): IterableIterator<EncodedQuadTerms<E>> {\n    const [ id0, id1, id2, id3 ] = ids;\n\n    let map1: NestedRecordActual<E>;\n    let map2: NestedRecordActual<E>;\n    let map3: NestedRecordActual<E>;\n\n    const map0: NestedRecordActual<E> = this.nestedRecords;\n    const map0Keys = id0 !== undefined ? (id0 in map0 ? [ id0 ] : []) : Object.keys(map0);\n    for (const key1 of map0Keys) {\n      map1 = map0[<E>key1];\n      const map1Keys = id1 !== undefined ? (id1 in map1 ? [ id1 ] : []) : Object.keys(map1);\n      for (const key2 of map1Keys) {\n        map2 = map1[<E>key2];\n        const map2Keys = id2 !== undefined ? (id2 in map2 ? [ id2 ] : []) : Object.keys(map2);\n        for (const key3 of map2Keys) {\n          map3 = map2[<E>key3];\n          const map3Keys = id3 !== undefined ? (id3 in map3 ? [ id3 ] : []) : Object.keys(map3);\n          for (const key4 of map3Keys) {\n            yield [\n              <E>Number.parseInt(<string>key1, 10),\n              <E>Number.parseInt(<string>key2, 10),\n              <E>Number.parseInt(<string>key3, 10),\n              <E>Number.parseInt(<string>key4, 10),\n            ];\n          }\n        }\n      }\n    }\n  }\n\n  public count(terms: QuadPatternTerms): number {\n    let count = 0;\n\n    const ids = encodeOptionalTerms(terms, this.dictionary);\n    if (!ids) {\n      return 0;\n    }\n    const id0 = ids[0];\n    const id1 = ids[1];\n    const id2 = ids[2];\n    const id3 = ids[3];\n\n    let map1: NestedRecordActual<E>;\n    let map2: NestedRecordActual<E>;\n    let map3: NestedRecordActual<E>;\n\n    const map0: NestedRecordActual<E> = this.nestedRecords;\n    const map0Keys = id0 !== undefined ? (id0 in map0 ? [ id0 ] : []) : Object.keys(map0);\n    for (const key1 of map0Keys) {\n      map1 = map0[<E>key1];\n      const map1Keys = id1 !== undefined ? (id1 in map1 ? [ id1 ] : []) : Object.keys(map1);\n      for (const key2 of map1Keys) {\n        map2 = map1[<E>key2];\n        const map2Keys = id2 !== undefined ? (id2 in map2 ? [ id2 ] : []) : Object.keys(map2);\n        for (const key3 of map2Keys) {\n          map3 = map2[<E>key3];\n          if (id3 !== undefined) {\n            if (id3 in map3) {\n              count++;\n            }\n          } else {\n            count += Object.keys(map3).length;\n          }\n        }\n      }\n    }\n\n    return count;\n  }\n}\n\nexport type NestedRecord<E extends string | number | symbol> = NestedRecordActual<E> | true;\nexport type NestedRecordActual<E extends string | number | symbol> = Record<E, Record<E, Record<E, Record<E, any>>>>;\n"]}