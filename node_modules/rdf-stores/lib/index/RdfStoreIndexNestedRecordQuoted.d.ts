import type { IRdfStoreOptions } from '../IRdfStoreOptions';
import type { QuadPatternTerms, EncodedQuadTerms, PatternTerm, QuadTerms } from '../PatternTerm';
import type { NestedRecordActual } from './RdfStoreIndexNestedRecord';
import { RdfStoreIndexNestedRecord } from './RdfStoreIndexNestedRecord';
/**
 * An RDF store index that is implemented using nested records with optimized quoted triple support.
 */
export declare class RdfStoreIndexNestedRecordQuoted<E extends number, V> extends RdfStoreIndexNestedRecord<E, V> {
    readonly features: {
        quotedTripleFiltering: boolean;
    };
    constructor(options: IRdfStoreOptions<E>);
    protected getQuotedPatternKeys(map: NestedRecordActual<E>, term: PatternTerm): IterableIterator<E>;
    find(terms: QuadPatternTerms): IterableIterator<QuadTerms>;
    findEncoded(ids: EncodedQuadTerms<E | undefined>, terms: QuadPatternTerms): IterableIterator<EncodedQuadTerms<E>>;
    count(terms: QuadPatternTerms): number;
}
