import type { IRdfStoreOptions } from '../IRdfStoreOptions';
import type { EncodedQuadTerms, QuadPatternTerms, PatternTerm, QuadTerms } from '../PatternTerm';
import type { NestedMapActual } from './RdfStoreIndexNestedMap';
import { RdfStoreIndexNestedMap } from './RdfStoreIndexNestedMap';
/**
 * An RDF store index that is implemented using nested Maps with optimized quoted triple support.
 */
export declare class RdfStoreIndexNestedMapQuoted<E, V> extends RdfStoreIndexNestedMap<E, V> {
    readonly features: {
        quotedTripleFiltering: boolean;
    };
    constructor(options: IRdfStoreOptions<E>);
    protected getQuotedPatternKeys(map: NestedMapActual<E, V>, term: PatternTerm): IterableIterator<E>;
    find(terms: QuadPatternTerms): IterableIterator<QuadTerms>;
    findEncoded(ids: EncodedQuadTerms<E | undefined>, terms: QuadPatternTerms): IterableIterator<EncodedQuadTerms<E>>;
    count(terms: QuadPatternTerms): number;
}
